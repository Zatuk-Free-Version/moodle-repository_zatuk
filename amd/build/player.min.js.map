{"version":3,"file":"player.min.js","sources":["../src/player.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Defines zatuk player action script.\n *\n * @since      Moodle 2.0\n * @copyright  2023 Moodle India\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport videojs from 'media_videojs/video-lazy';\nimport messagemodal from 'repository_zatuk/messagemodal';\n\nlet MessageModal = new messagemodal();\nexport const play = ( root ) => {\n    $(root).on('click', (e) => {\n        e.preventDefault();\n        let args = $(root).data();\n        get_video_url(args.video);\n    });\n};\nconst get_video_url = (videoid) => {\n    let promise = Ajax.call([\n        {\n            methodname: 'repository_zatuk_get_video_url',\n            args: {\n                videoid: videoid\n            }\n        }\n    ]);\n    promise[0].done((response) => {\n        if(!response.error){\n            let video = response.response;\n            ModalFactory.create({\n                title: video.title,\n                type: ModalFactory.types.DEFAULT,\n                body: Templates.render('repository_zatuk/videos/player', video)\n            }).done((modal) => {\n                modal.show();\n                modal.getRoot().on(ModalEvents.shown, () => {\n                    const player = videojs('zatuk_player_'+videoid);\n                    player.src({\n                        autoplay:true,\n                        controls:true,\n                        src: video.player_url,\n                        type: 'application/x-mpegURL'\n                    });\n                    player.play();\n                });\n                modal.getRoot().on(ModalEvents.hidden, function(){\n                    let player = videojs('zatuk_player_'+videoid);\n                    player.dispose();\n                });\n            });\n        }else{\n\n        }\n    }).fail((error) => {\n       MessageModal.confirmbox(error);\n    });\n};\nexport default { play };"],"names":["MessageModal","play","root","on","e","preventDefault","args","data","get_video_url","video","videoid","Ajax","call","methodname","done","response","error","create","title","type","ModalFactory","types","DEFAULT","body","Templates","render","modal","show","getRoot","ModalEvents","shown","player","src","autoplay","controls","player_url","hidden","dispose","fail","confirmbox"],"mappings":";;;;;;;yXA8BIA,aAAe,yEACNC,KAASC,2BAChBA,MAAMC,GAAG,SAAUC,IACjBA,EAAEC,qBACEC,MAAO,mBAAEJ,MAAMK,OACnBC,cAAcF,KAAKG,oCAGrBD,cAAiBE,UACLC,cAAKC,KAAK,CACpB,CACIC,WAAY,iCACZP,KAAM,CACFI,QAASA,YAIb,GAAGI,MAAMC,eACTA,SAASC,MAAM,KACXP,MAAQM,SAASA,gCACRE,OAAO,CAChBC,MAAOT,MAAMS,MACbC,KAAMC,uBAAaC,MAAMC,QACzBC,KAAMC,mBAAUC,OAAO,iCAAkChB,SAC1DK,MAAMY,QACLA,MAAMC,OACND,MAAME,UAAUzB,GAAG0B,sBAAYC,OAAO,WAC5BC,QAAS,sBAAQ,gBAAgBrB,SACvCqB,OAAOC,IAAI,CACPC,UAAS,EACTC,UAAS,EACTF,IAAKvB,MAAM0B,WACXhB,KAAM,0BAEVY,OAAO9B,UAEXyB,MAAME,UAAUzB,GAAG0B,sBAAYO,QAAQ,YACtB,sBAAQ,gBAAgB1B,SAC9B2B,oBAMpBC,MAAMtB,QACNhB,aAAauC,WAAWvB,wBAGhB,CAAEf,KAAAA"}